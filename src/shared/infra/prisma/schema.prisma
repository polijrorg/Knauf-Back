// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model Administrator {
  id         String   @id @default(uuid())
  email      String
  name       String
  password   String
  image      String
  language   String
  created_at DateTime @default(now())
}

model Answers {
  id         String    @id @default(uuid())
  user       Users     @relation(fields: [userId], references: [id])
  userId     String
  question   Questions @relation(fields: [questionId], references: [id])
  questionId String
  answer     String
  created_at DateTime  @default(now())
  approved   Boolean   @default(false)
}

model Users {
  id          String        @id @default(uuid())
  email       String
  password    String
  language    Language      @default(portuguese)
  name        String
  image       String
  active      Boolean
  score       Int
  created_at  DateTime      @default(now())
  seen        Seen[]
  questions   Questions[]
  answers     Answers[]
  quizzGrades QuizzGrades[]
}

model Questions {
  id         String    @id @default(uuid())
  user       Users     @relation(fields: [userId], references: [id])
  userId     String
  question   String
  created_at DateTime  @default(now())
  module     Module    @relation(fields: [moduleId], references: [id])
  moduleId   String
  approved   Boolean   @default(false)
  answers    Answers[]
}

model Campaigns {
  id         String   @id @default(uuid())
  module     Module   @relation(fields: [moduleId], references: [id])
  moduleId   String
  image      String
  title      String
  subtitle   String
  text       String
  language   Language @default(portuguese)
  created_at DateTime @default(now())
}

model Module {
  id         String      @id @default(uuid())
  quizzes    Quizz[]
  questions  Questions[]
  name       String
  image      String
  language   Language    @default(portuguese)
  created_at DateTime    @default(now())
  content    Content[]
  campaigns  Campaigns[]
}

model Content {
  id          String   @id @default(uuid())
  module      Module   @relation(fields: [moduleId], references: [id])
  moduleId    String
  seen        Seen[]
  title       String
  description String
  linkVideo   String?
  linkAudio   String?
  image       String?
  language    Language @default(portuguese)
  created_at  DateTime @default(now())
}

model Seen {
  id        String  @id @default(uuid())
  user      Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String  @unique
  seen      Boolean @default(false)
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contentId String  @unique
}

model Quizz {
  id                String           @id @default(uuid())
  quizzQuestions    QuizzQuestions[]
  quizzGrades       QuizzGrades[]
  image             String
  text              String
  amountOfQuestions Int
  language          Language         @default(portuguese)
  module            Module           @relation(fields: [moduleId], references: [id])
  moduleId          String
}

model QuizzQuestions {
  id          String @id @default(uuid())
  question    String
  answers     Json
  rightAnswer String
  quizz       Quizz  @relation(fields: [quizzId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quizzId     String
}

model QuizzGrades {
  id        String  @id @default(uuid())
  user      Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  timeSpent Int?
  record    Int?
  seen      Boolean @default(false)
  quizz     Quizz   @relation(fields: [quizzId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quizzId   String
}

model Statment {
  id         String   @id @default(uuid())
  image      String
  text       String
  language   Language @default(portuguese)
  title      String   @default("Statment title")
  created_at DateTime @default(now())
}

enum Language {
  portuguese
  english
  spanish
}
